---
# tasks file for ucs_join

- name: "Check if all mandatory common vars are set"
  ansible.builtin.assert:
    that:
      - "ucs_join_server_type|string|length > 0"
      - "ucs_join_server_type == 'master' or ucs_join_server_type == 'backup'"
      - "ucs_join_admin_user_name|string|length > 0"
      - "ucs_join_root_password|string|length > 0"
      - "ucs_join_hostname|string|length > 0"
      - "ucs_join_domain_name|string|length > 0"
      - "ucs_join_basedn|string|length > 0"
      - "ucs_join_network_config_interface|string|length > 0"
      - "ucs_join_network_config_type|string|length > 0"
    fail_msg: "At least one necessary variable is not set. Skip this check with --skip-tags ucs_join_check_common_preconditions"
  tags:
    - ucs_join
    - ucs_join_check_common_preconditions

- name: "Check if all static network setting vars are set"
  ansible.builtin.assert:
    that:
      - "ucs_join_network_config_static_ip_config|string|length > 0"
      - "ucs_join_network_config_static_ip_config|ipaddr('address')|length > 0"
      - "ucs_join_network_config_static_ip_config|ipaddr('netmask')|length > 0"
      - "ucs_join_network_config_static_ip_config|ipaddr('network')|length > 0"
      - "ucs_join_network_config_static_gateway|string|length > 0"
      - "ucs_join_network_config_static_dns_servers|length > 0"
    fail_msg: "At least one necessary variable is not set. Skip this check with --skip-tags ucs_join_check_static_network_preconditions"
  when: "ucs_join_network_config_type == 'static'"
  tags:
    - ucs_join
    - ucs_join_check_static_network_preconditions

- name: "Check if backup vars are set"
  ansible.builtin.assert:
    that:
      - "ucs_join_master_server|string|length > 0"
    fail_msg: "At least one necessary variable is not set. Skip this check with --skip-tags ucs_join_check_backup_preconditions"
  when: "ucs_join_server_type == 'backup'"
  tags:
    - ucs_join
    - ucs_join_check_backup_preconditions

- name: "Get derived admin password"
  ansible.builtin.set_fact:
    ucs_join_final_root_password: '{{ ucs_join_derive_root_password_prefix + "@" + inventory_hostname.split("-")[-1] }}'
  when: "ucs_join_derive_root_password_from_hostname|bool"
  no_log: true
  tags:
    - always
    - ucs_join
    - ucs_join_derive_admin_password

- name: "Use preconfigured root password"
  ansible.builtin.set_fact:
    ucs_join_final_root_password: '{{ ucs_join_root_password }}'
  when: "not ucs_join_derive_root_password_from_hostname|bool"
  no_log: true
  tags:
    - always
    - ucs_join
    - ucs_join_derive_admin_password

- name: "Create UCS join profile from template"
  ansible.builtin.template:
    src: "profile.j2"
    dest: "/var/cache/univention-system-setup/profile"
  no_log: true
  tags:
    - ucs_join
    - ucs_join_create_join_profile

- name: "Carry out UCS join (master/standalone)"
  ansible.builtin.command: "/usr/lib/univention-system-setup/scripts/setup-join.sh"
  when: "ucs_join_server_type|default('master') != 'backup'"
  tags:
    - ucs_join
    - ucs_join_run
    - ucs_join_run_primary
    - ucs_join_run_standalone

- name: "Carry out UCS join (backup)"
  block:
    - name: "Create temporary admin password file"
      ansible.builtin.tempfile:
        state: file
      register: ucs_join_admin_pw_file
      tags:
        - ucs_join_admin_pw_file

    - name: "Write admin password into temporary file"
      ansible.builtin.copy:
        dest: "{{ ucs_join_admin_pw_file.path }}"
        content: "{{ ucs_join_root_password }}"
        mode: 0600
      tags:
        - ucs_join_admin_pw_file

    - name: "Carry out UCS join (backup)"
      ansible.builtin.command: >
        /usr/lib/univention-system-setup/scripts/setup-join.sh
        --dcaccount "{{ ucs_join_admin_user_name }}"
        --password_file "{{ ucs_join_admin_pw_file.path }}"
      tags:
        - ucs_join_run
        - ucs_join_run_backup

  always:
    - name: "Make sure that the temporary admin password file is gone"
      ansible.builtin.file:
        path: "{{ ucs_join_admin_pw_file.path }}"
        state: "absent"
      tags:
        - ucs_join_cleanup_admin_pw_file
        - cleanup

  when: "ucs_join_server_type|default('master') == 'backup'"
  tags:
    - ucs_join
    - ucs_join_backup
