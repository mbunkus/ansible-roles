---
# tasks file for portal_delete_category

- name: "Check if category that is about to be deleted exists to begin with"
  ansible.builtin.command: >
    udm portals/category list
    --position "cn=portal_delete_category_item,{{ portal_delete_category_item['dn']
                                                    |default(portal_delete_category_base_dn) }}"
    --filter "cn={{ portal_delete_category_item['name'] }}"
  loop: "{{ portal_delete_category_categories|selectattr('state', 'defined')|selectattr('state', 'equalto', 'absent')
              |list|default([])|flatten }}"
  loop_control:
    loop_var: "portal_delete_category_item"
  register: "portal_delete_category_existing_portal_categories"
  when: |
     ('only' not in portal_delete_category_item) or
     ('only' in portal_delete_category_item and
       portal_delete_category_install_list|intersect([portal_delete_category_item['only']]|flatten)
     )
  tags:
    - "portal_delete_category"
    - "portal_delete_category_check_categories"

- name: "Delete existing portal category"
  vars:
    category: "{{ portal_delete_category_item.item }}"
  ansible.builtin.command: >
    udm portals/category delete
    --dn 'cn={{ category["name"] }},cn=category,{{ category["dn"]|default(portal_delete_category_base_dn) }}'
    --ignore_not_exists
  loop: "{{ portal_delete_category_existing_portal_categories['results']|default([]) }}"
  loop_control:
    loop_var: "portal_delete_category_item"
  tags:
    - "portal_delete_category_delete_category"
