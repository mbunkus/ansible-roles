---
# tasks file for ox_connector

- name: "ox_connector | Install OX connector"
  block:
    - name: "ox_connector | Set static host entry of ox server"
      univention.ucs_modules.univention_config_registry:
        kvlist:
          - key: "hosts/static/{{ ox_connector_soap_server_ip }}"
            value: "{{ ox_connector_soap_server_name }}"
      tags:
        - ox_connector_static_ox_host

    - name: "ox_connector | Install ox-connector"
      vars:
        install_packages_app_version_map: "{{ ox_connector_app_version_map }}"
        install_packages_temp_pw_file: "{{ ox_connector_temp_pw_file }}"
        install_packages_install_apps:
          - "ox-connector"
        install_packages_additional_options: >
          DEFAULT_CONTEXT=9999
          OX_SOAP_SERVER=https://{{ ox_connector_soap_server_name }}/
          OX_IMAP_SERVER=imap://127.0.0.1:143
          OX_SMTP_SERVER=smtp://127.0.0.1:26
          OX_MASTER_ADMIN={{ ox_connector_master_admin }}
          OX_MASTER_PASSWORD={{ ox_connector_master_password }}
      ansible.builtin.include_role:
        name: install_packages
      tags:
        - ox_connector_install

    - name: "ox_connector | Stop slapd"
      ansible.builtin.service:
        name: "slapd"
        state: "stopped"
      tags:
        - ox_connector_stop_slapd

    - name: "ox_connector | Add oxDisplayName index"
      ansible.builtin.command:
        cmd: "/usr/share/univention-ldap/ldap_setup_index --add-eq oxDisplayName"
      tags:
        - ox_connector_index_oxdisplayname

    - name: "ox_connector | Start slapd"
      ansible.builtin.service:
        name: "slapd"
        state: "started"
      tags:
        - ox_connector_start_slapd

    - name: "ox_connector | Create ox context"
      ansible.builtin.command: >
        udm oxmail/oxcontext create
        --position "cn=open-xchange,{{ ox_connector_basedn }}"
        --set contextid=9999
        --set name=9999
        --ignore_exists
      tags:
        - ox_connector_ox_context

    - name: "ox_connector | Create ox accessprofile"
      ansible.builtin.command: >
        udm oxmail/accessprofile create
        --position "cn=accessprofiles,cn=open-xchange,{{ ox_connector_basedn }}"
        --set name=phoenix_standard
        --set displayName="Phoenix Standard"
        --set calendar=TRUE
        --set collectemailaddresses=TRUE
        --set contacts=TRUE
        --set delegatetask=TRUE
        --set editgroup=TRUE
        --set editpassword=TRUE
        --set editpublicfolders=TRUE
        --set editresource=TRUE
        --set ical=TRUE
        --set multiplemailaccounts=TRUE
        --set readcreatesharedfolders=TRUE
        --set subscription=TRUE
        --set tasks=TRUE
        --set vcard=TRUE
        --set webdav=TRUE
        --set webmail=TRUE
        --ignore_exists
      tags:
        - ox_connector_add_phoenix_accessprofile

    - name: "ox_connector | Remove existing accessprofiles"
      ansible.builtin.command: >
        udm oxmail/accessprofile remove
        --dn="{{ item }},{{ ox_connector_basedn }}"
        --ignore_not_exists
      loop:
        - "cn=webmail,cn=accessprofiles,cn=open-xchange"
        - "cn=webmail_drive,cn=accessprofiles,cn=open-xchange"
        - "cn=pim,cn=accessprofiles,cn=open-xchange"
        - "cn=pim_drive,cn=accessprofiles,cn=open-xchange"
        - "cn=groupware,cn=accessprofiles,cn=open-xchange"
        - "cn=premium,cn=accessprofiles,cn=open-xchange"
      tags:
        - ox_connector_remove_existing_accessprofiles

    - name: "ox_connector | Modify usertemplate"
      ansible.builtin.command: >
        udm settings/usertemplate modify
        --dn "cn=open-xchange groupware account,cn=templates,cn=univention,{{ ox_connector_basedn }}"
        --set name="Benutzer mit Groupware-Konto"
        --set oxAccess="phoenix_standard"
      register: "ox_connector_modify_usertemplate"
      failed_when: "ox_connector_modify_usertemplate.rc != 0 and (ox_connector_modify_usertemplate.rc == 3 and 'object not found' not in ox_connector_modify_usertemplate.stdout"
      tags:
        - ox_connector_modify_usertemplate

    - name: "ox_connector | Set oxDisplayName in usertemplate"
      ansible.builtin.command: >
        udm settings/usertemplate modify
        --dn
        'cn=Benutzer mit Groupware-Konto,cn=templates,cn=univention,{{ ox_connector_basedn }}'
        --set
        oxDisplayName="<firstname> <lastname> (<username>)"
        --set
        mailPrimaryAddress=""
        --set
        e-mail=""
      tags:
        - ox_connector_modify_usertemplate_set_oxdisplayname_in_user_template

    - name: "ox_connector | Add default dn to users"
      univention.ucs_modules.univention_config_registry:
        keys:
          directory/manager/web/modules/users/user/add/default: "cn=Benutzer mit Groupware-Konto,cn=templates,cn=univention,{{ ox_connector_basedn }}"
      tags:
        - ox_connector_default_dn

    - name: "ox_connector | Disable UDMWeb for User"
      ansible.builtin.command: >
        udm settings/extended_attribute modify \
          --dn "cn=oxContextUser,cn=open-xchange,cn=custom attributes,cn=univention,{{ ox_connector_basedn }}" \
          --set mayChange=0 \
          --set disableUDMWeb=1
      tags:
        - ox_connector_disable_udmweb_user

    - name: "ox_connector | Disable UDMWeb for Ressource"
      ansible.builtin.command: >
        udm settings/extended_attribute modify \
          --dn "cn=oxContextResource,cn=open-xchange,cn=custom attributes,cn=univention,{{ ox_connector_basedn }}" \
          --set mayChange=0 \
          --set disableUDMWeb=1
      tags:
        - ox_connector_disable_udmweb_ressource

    - name: "ox_connector | Create ipmanagedclients"
      ansible.builtin.command: >
        udm computers/ipmanagedclient create \
          --position "cn=computers,{{ ox_connector_basedn }}" \
          --set dnsEntryZoneForward="zoneName={{ ox_connector_domain_name }},cn=dns,{{ ox_connector_basedn }}" \
          --set name=ox-connect \
          --set ip={{ ox_connector_soap_server_ip }} \
          --set domain={{ ox_connector_domain_name }} \
          --ignore_exists
      register: "ox_connector_ipmanagedclients"
      failed_when: "ox_connector_ipmanagedclients.rc > 0 and 'already in use' not in ox_connector_ipmanagedclients.stdout"
      tags:
        - ox_connector_ipmanagedclients

  when: "ox_connector_server_type|default('master') != 'backup'"
  tags:
    - ox_connector
