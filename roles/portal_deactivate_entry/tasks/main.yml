---
# tasks file for portal_deactivate_entry

- name: "Check if entry that is about to be deactivated exists to begin with"
  ansible.builtin.command: >
    udm portals/entry list
    --position "cn=entry,{{ entry['dn']|default(portal_deactivate_entry_portal_dn) }}"
    --filter "cn={{ entry['name'] }}"
  loop: "{{ portal_deactivate_entry_entries|selectattr('state', 'defined')|selectattr('state', 'equalto', 'deactivated')|list|default([])|flatten }}"
  loop_control:
    loop_var: "entry"
  register: portal_deactivate_entry_entries
  when:
    - ('only' not in entry) or
        ('only' in entry and
          portal_deactivate_entry_install_list|intersect([entry['only']]|flatten)
        )
  tags:
    - portal_deactivate_entry
    - portal_deactivate_entry_check_entries

- name: "Deactivate existing portal entry"
  vars:
    entry: "{{ item.item }}"
  ansible.builtin.command: >
    udm portals/entry modify
    --dn 'cn={{ entry["name"] }},cn=entry,{{ entry["dn"]|default(portal_deactivate_entry_portal_dn) }}'
    --set activated="FALSE"
  ignore_errors: true
  loop: "{{ portal_deactivate_entry_entries['results']|default({}) }}"
  tags:
    - portal_deactivate_entry
    - portal_deactivate_entry_deactivate_entry
